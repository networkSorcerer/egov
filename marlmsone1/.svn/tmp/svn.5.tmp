<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.happyjob.study.adm.dao.PeopleMngDao">
	<!-- 공통 -->

	<!--회원 탈퇴 -->
	<update id="ban_user">
		UPDATE tb_userinfo
		   SET use_yn = "N"
		 WHERE loginID=#{loginID}
	</update>

	<!--회원 정보 조회 -->
	<select id="user_info" resultType="kr.happyjob.study.adm.model.PeopleMngModel">
		SELECT 
			   loginID, 
			   user_type,
			   name, 
			   password, 
			   sex, 
			   mail, 
			   addr, 
			   std_num, 
			   DATE_FORMAT(join_date, '%Y.%m.%d') as join_date,
		       DATE_FORMAT(substring(regi_num, 1,6), '%Y.%m.%d') as birth,
		       tel
		  FROM tb_userinfo
		 WHERE use_yn = "Y"
		   AND loginID=#{loginID}
	</select>

	<!-- 학생관리 -->

	<!--강의 리스트 조회 -->
	<select id="lec_list" resultType="kr.happyjob.study.adm.model.PeopleMngModel">
		SELECT
			   lec_id,
			   lec_name,
			   DATE_FORMAT(start_date, '%Y.%m.%d') as start_date,
			   DATE_FORMAT(end_date,'%Y.%m.%d') as end_date
		  FROM tb_lec_info
		<if test="(searchWord_lec != null) and (!searchWord_lec.equals(''))">
			WHERE lec_name Like CONCAT('%',#{searchWord_lec}, '%')
		</if>
		<if test="(pageIndex != null) and (!pageIndex.equals('')) and (pageSize != null) and (!pageSize.equals(''))">
			LIMIT #{pageIndex}, #{pageSize}
		</if>
	</select>

	<!-- 강의 수 조회 -->
	<select id="countList_lec" resultType="int">
		SELECT COUNT(lec_id) AS tot_cnt
		  FROM tb_lec_info
	    <if test="(searchWord_lec != null) and (!searchWord_lec.equals(''))">
		 	WHERE lec_name Like CONCAT('%',#{searchWord_lec}, '%')
		</if>
	</select>

	<!--학생 목록 조회-->
	<select id="std_list" resultType="kr.happyjob.study.adm.model.PeopleMngModel">
		SELECT
		       u.loginID,
		       u.name,
		       u.std_num,
		       DATE_FORMAT(u.join_date, '%Y.%m.%d') as join_date,
		       l.lec_id,
		       li.lec_name,
		       u.tel
		  FROM tb_userinfo u
	 LEFT JOIN tb_lecstd_info l
		    ON u.loginID = l.std_id
	 LEFT JOIN tb_lec_info li
			ON l.lec_id=li.lec_id
		<where>
			u.use_yn = "Y"
		AND u.user_type="A"
		AND l.apv_yn="Y"
			<if test="(lec_id != null) and (lec_id.equals('미수강'))">
				AND l.lec_id is null
			</if>
			<if test="(lec_id != null) and (!lec_id.equals('')) and (!lec_id.equals('미수강'))">
				AND l.lec_id=#{lec_id}
			</if>
			<if test="(from_date != null) and (!from_date.equals('')) and (to_date != null) and (!to_date.equals(''))">
				AND u.join_date between #{from_date} and #{to_date}
			</if>
			<if test="(searchKey_std!= null) and (!searchKey_std.equals(''))">
				<choose>
					<when test="(searchKey_std != null) and (searchKey_std eq 'all'.toString())">
						AND (
							u.name LIKE CONCAT('%', #{searchWord_std }, '%') or
							u.loginID LIKE CONCAT('%', #{searchWord_std }, '%') or
							u.tel LIKE CONCAT('%', #{searchWord_std }, '%')
							)
					</when>
					<when test="(searchKey_std != null) and (searchKey_std eq 'stdNm'.toString())">
						AND u.name LIKE CONCAT('%', #{searchWord_std }, '%')
					</when>
					<when test="(searchKey_std != null) and (searchKey_std eq 'stdId'.toString())">
						AND u.loginID LIKE CONCAT('%', #{searchWord_std }, '%')
					</when>
					<when test="(searchKey_std != null) and (searchKey_std eq 'tel'.toString())">
						AND u.tel LIKE CONCAT('%', #{searchWord_std }, '%')
					</when>
				</choose>
			</if>
		</where>
		<if test="(lec_id == null) or (lec_id.equals(''))">
 			GROUP BY u.loginID			
 		</if>
			ORDER BY join_date
		<if test="(pageIndex_std != null) and (!pageIndex_std.equals('')) and (pageSize_std != null) and (!pageSize_std.equals(''))">
			LIMIT #{pageIndex_std}, #{pageSize_std}
		</if>
	</select>

	<!-- 학생 수 조회 -->
	<select id="countList_std" resultType="_int">
		SELECT COUNT(distinct u.loginID)
		  FROM tb_userinfo u
	 LEFT JOIN tb_lecstd_info l
		    ON u.loginID = l.std_id
	 LEFT JOIN tb_lec_info li
		    ON l.lec_id=li.lec_id
		<where>
			u.use_yn = "Y"
		AND u.user_type="A"
		AND l.apv_yn="Y"
			<if test="(lec_id != null) and (lec_id.equals('미수강'))">
				AND l.lec_id is null
			</if>
			<if test="(lec_id != null) and (!lec_id.equals('')) and (!lec_id.equals('미수강'))">
				AND l.lec_id=#{lec_id}
			</if>
			<if test="(from_date != null) and (!from_date.equals('')) and (to_date != null) and (!to_date.equals(''))">
				AND u.join_date between #{from_date} and #{to_date}
			</if>
			<if test="(searchKey_std!= null) and (!searchKey_std.equals(''))">
				<choose>
					<when test="(searchKey_std != null) and (searchKey_std eq 'all'.toString())">
						AND (
							u.name LIKE CONCAT('%', #{searchWord_std }, '%') or
							u.loginID LIKE CONCAT('%', #{searchWord_std }, '%') or
							u.tel LIKE CONCAT('%', #{searchWord_std }, '%')
							)
					</when>
					<when test="(searchKey_std != null) and (searchKey_std eq 'stdNm'.toString())">
						AND u.name LIKE CONCAT('%', #{searchWord_std }, '%')
					</when>
					<when test="(searchKey_std != null) and (searchKey_std eq 'stdId'.toString())">
						AND u.loginID LIKE CONCAT('%', #{searchWord_std }, '%')
					</when>
					<when test="(searchKey_std != null) and (searchKey_std eq 'tel'.toString())">
						AND u.tel LIKE CONCAT('%', #{searchWord_std }, '%')
					</when>
				</choose>
			</if>
		</where>
	</select>

	<!-- 학생 수강 목록 조회 -->
	<select id="std_lec_info" resultType="kr.happyjob.study.adm.model.PeopleMngModel">
		SELECT 
			   l.lec_id,
			   li.lec_name,
			   DATE_FORMAT(li.start_date, '%Y.%m.%d') as start_date,
			   DATE_FORMAT(li.end_date, '%Y.%m.%d') as end_date
		  FROM tb_userinfo u
	INNER JOIN tb_lecstd_info l
		    ON u.loginID = l.std_id
	INNER JOIN tb_lec_info li
		    ON l.lec_id=li.lec_id
		 WHERE u.loginID=#{loginID}
	</select>

	<!-- 학생 수강 강의 수 조회 -->
	<select id="std_lec_count" resultType="int">
		SELECT count(l.std_id)
		  FROM tb_userinfo u
	INNER JOIN tb_lecstd_info l
		    ON u.loginID = l.std_id
	INNER JOIN tb_lec_info li
		    ON l.lec_id=li.lec_id
		 WHERE u.loginID=#{loginID}
	</select>
	
    <!-- 학생 수강 신청 -->
	<insert id="std_lec_reg">
	INSERT INTO 
				tb_lecstd_info
				(
				  lec_id, 
				  std_id, 
				  srvy_yn, 
				  apv_yn,
				  test_yn
				 )
		  VALUES 
		  		 (
		  		  #{lec_id}, 
		  		  #{std_id},
		  		  'N',
		  		  'Y',
		  		  'N'
		  		  )
	</insert>
	
	<!-- 수강 인원 증가 -->
	<select id="plusPrePnum" resultType="kr.happyjob.study.adm.model.PeopleMngModel">
   		UPDATE tb_lec_info
		   SET pre_pnum = pre_pnum + 1
		 WHERE lec_id = #{lec_id}
    </select>
	
	<!-- 학생 수강 취소 -->
	<delete id="std_lec_del">
	DELETE 
	  FROM tb_lecstd_info 
	 WHERE lec_id = #{lec_id} 
	   AND std_id = #{std_id} 
	</delete>
	
	<!-- 수강 인원 감소 -->
	<select id="minusPrePnum" resultType="kr.happyjob.study.adm.model.PeopleMngModel">
   		UPDATE tb_lec_info
		   SET pre_pnum = pre_pnum-1
		 WHERE lec_id = #{lec_id}
    </select>
	
	
	<!-- 강사 관리 -->

	<!--강사 목록 조회-->
	<select id="tut_list" resultType="kr.happyjob.study.adm.model.PeopleMngModel">
		SELECT 
			   loginID,
			   name,
			   user_type,
			   mail,
			   tel,
			   DATE_FORMAT(join_date, '%Y.%m.%d') as join_date 
		  FROM tb_userinfo u
		 WHERE use_yn = 'Y'
			<if test="(user_type != null) and (user_type.equals(''))">
				AND user_type='b'
			</if>
			<if test="(user_type != null) and (!user_type.equals(''))">
				AND user_type=#{user_type}
			</if>
			<if test="(from_date != null) and (!from_date.equals('')) and (to_date != null) and (!to_date.equals(''))">
				AND u.join_date between #{from_date} and #{to_date}
			</if>
			<if test="(searchKey != null) and (!searchKey.equals(''))">
				<choose>
					<when test="(searchKey != null) and (searchKey eq 'all'.toString())">
						AND (
							u.name Like CONCAT('%', #{searchWord}, '%') or
							u.loginID LIKE CONCAT('%', #{searchWord}, '%') or
							u.tel LIKE CONCAT('%', #{searchWord}, '%')
							)
					</when>
					<when test="(searchKey != null) and (searchKey eq 'name'.toString())">
						AND u.name Like CONCAT('%', #{searchWord}, '%')
					</when>
					<when test="(searchKey != null) and (searchKey eq 'id'.toString())">
						AND u.loginID LIKE CONCAT('%', #{searchWord}, '%')
					</when>
					<when test="(searchKey != null) and (searchKey eq 'tel'.toString())">
						AND u.tel LIKE CONCAT('%', #{searchWord}, '%')
					</when>
				</choose>
			</if>
			ORDER BY join_date DESC
		<if test="(pageIndex != null) and (!pageIndex.equals('')) and (pageSize != null) and (!pageSize.equals(''))">
			LIMIT #{pageIndex},#{pageSize}
		</if>
	</select>


	<!--강사 수 조회 -->
	<select id="countList_tut" resultType="int">
		SELECT count(loginID)
	 	  FROM tb_userinfo u
		 WHERE use_yn = 'Y'
			<if test="(user_type != null) and (user_type.equals(''))">
				AND user_type='b'
			</if>
			<if test="(user_type != null) and (!user_type.equals(''))">
				AND user_type=#{user_type}
			</if>
			<if test="(from_date != null) and (!from_date.equals('')) and (to_date != null) and (!to_date.equals(''))">
				AND u.join_date between #{from_date} and #{to_date}
			</if>
			<if test="(searchKey != null) and (!searchKey.equals(''))">
				<choose>
					<when test="(searchKey != null) and (searchKey eq 'all'.toString())">
						AND (
							  u.name LIKE CONCAT('%', #{searchWord}, '%') or
							  u.loginID LIKE CONCAT('%', #{searchWord}, '%') or
							  u.tel LIKE CONCAT('%', #{searchWord}, '%')
							)
					</when>
					<when test="(searchKey != null) and (searchKey eq 'name'.toString())">
						AND u.name LIKE CONCAT('%', #{searchWord}, '%')
					</when>
					<when test="(searchKey != null) and (searchKey eq 'id'.toString())">
						AND u.loginID LIKE CONCAT('%', #{searchWord}, '%')
					</when>
					<when test="(searchKey != null) and (searchKey eq 'tel'.toString())">
						AND u.tel LIKE CONCAT('%', #{searchWord}, '%')
					</when>
				</choose>
			</if>
	</select>

	<!--강사 승인 -->
	<update id="apv_tut">
		UPDATE tb_userinfo 
		   SET user_type="B"
		 WHERE use_yn ='Y'
		   AND loginID = #{loginID}
	</update>

	<!--강사 강의 목록 조회-->
	<select id="tlec_list" resultType="kr.happyjob.study.adm.model.PeopleMngModel">
		SELECT
		       li.lec_id,
		       li.lec_name,
		       DATE_FORMAT(li.start_date, '%Y.%m.%d') as start_date,
		       DATE_FORMAT(li.end_date, '%Y.%m.%d') as end_date
		  FROM tb_userinfo u
	INNER JOIN tb_lec_info li
		    ON u.loginID = li.tutor_id
		 WHERE use_yn ='Y'
		   AND u.loginID=#{loginID}
	</select>

	<!-- 강사 강의 수 조회 -->
	<select id="tut_lec_count" resultType="int">
		SELECT count(loginId)
		  FROM tb_userinfo u
	INNER JOIN tb_lec_info li
		    ON u.loginID = li.tutor_id
		 WHERE use_yn ='Y'
		   AND u.loginID=#{loginID}
	</select>

</mapper>