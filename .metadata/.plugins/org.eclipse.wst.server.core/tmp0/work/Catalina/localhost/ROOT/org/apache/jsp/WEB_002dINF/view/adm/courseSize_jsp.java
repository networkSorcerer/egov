/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2024-06-18 11:14:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.adm;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class courseSize_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1717304976992L));
    _jspx_dependants.put("jar:file:/C:/Users/user/git/egov/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/marlmsone1/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>수강 인원 통계</title>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/common_include.jsp", out, false);
      out.write("\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js\"></script>\r\n");
      out.write("\r\n");
      out.write(" <script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t// 페이징 설정\r\n");
      out.write("\tvar pageSize = 15;\r\n");
      out.write("\tvar pageBlockSize = 5;\r\n");
      out.write("\t\r\n");
      out.write("\t/* OnLoad Event */\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t// 강의 목록 조회\r\n");
      out.write("\t\tsLectureList();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 버튼 이벤트 등록\r\n");
      out.write("\t\tfRegisterButtonClickEvent();\r\n");
      out.write("\r\n");
      out.write("\t\t// 달력 설정\r\n");
      out.write("\t\t$(\"#Datepicker\").datepicker({});\r\n");
      out.write("\t\t$(\"#to_date\").change(function() {\r\n");
      out.write("\t\t\tif ($(\"#to_date\").val() <$(\"#from_date\").val()){\r\n");
      out.write("\t\t\t\talert(\"최소기간 보다 작을수 없습니다.\")\r\n");
      out.write("\t\t\t\t$(\"#to_date\").val('');\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t/** 버튼 이벤트 */\r\n");
      out.write("\tfunction fRegisterButtonClickEvent() {\r\n");
      out.write("\t\t$('a[name=btn]').click(function(e) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar btnId = $(this).attr('id');\r\n");
      out.write("\r\n");
      out.write("\t\t\tswitch (btnId) {\r\n");
      out.write("\t\t\tcase 'btnClose':\r\n");
      out.write("\t\t\t\tgfCloseModal();\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\tcase 'btn_lec_reg':\r\n");
      out.write("\t\t\t\tstd_lec_reg();\r\n");
      out.write("\t\t\t\tbreak;\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction dateSelect(docForm,selectIndex) {\r\n");
      out.write("\t\tconsole.log(\"1\");\r\n");
      out.write("\t\twatch = new Date(docForm.year.options[docForm.year.selectedIndex].text, docForm.month.options[docForm.month.selectedIndex].value,1);\r\n");
      out.write("\t\tconsole.log(\"2\");\r\n");
      out.write("\t\thourDiffer = watch - 86400000;\r\n");
      out.write("\t\tconsole.log(\"3\");\r\n");
      out.write("\t\tcalendar = new Date(hourDiffer);\r\n");
      out.write("\t\tconsole.log(\"4\");\r\n");
      out.write("\t\tvar daysInMonth = calendar.getDate();\r\n");
      out.write("\t\tconsole.log(\"5\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tfor (var i = 0; i < docForm.day.length; i++) {\r\n");
      out.write("\t\t\t\tdocForm.day.options[0] = null;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfor (var i = 0; i < daysInMonth; i++) {\r\n");
      out.write("\t\t\t\tdocForm.day.options[i] = new Option(i+1);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tdocument.form1.day.options[0].selected = true;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/* 강의 목록 조회 */\r\n");
      out.write("\tfunction sLectureList(currentPage){\r\n");
      out.write("\t\tcurrentPage = currentPage || 1;\r\n");
      out.write("\t\tsearchWord = $(\"#searchWord\").val();\r\n");
      out.write("\t\tsearchKey = $(\"#searchKey\").val();\r\n");
      out.write("\t\tfrom_date =$(\"#from_date\").val();\r\n");
      out.write("\t\tto_date =$(\"#to_date\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(from_date != '' && to_date == ''){\r\n");
      out.write("\t\t\talert(\"끝 날짜를 선택해주세요.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t} else if(from_date == '' && to_date != ''){\r\n");
      out.write("\t\t\talert(\"시작 날짜를 선택해주세요.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar param = {\r\n");
      out.write("\t\t\t\tsearchKey : searchKey,\r\n");
      out.write("\t\t\t\tsearchWord : searchWord,\r\n");
      out.write("\t\t\t\tcurrentPage : currentPage,\r\n");
      out.write("\t\t\t\tpageSize : pageSize,\r\n");
      out.write("\t\t\t\tfrom_date : from_date,\r\n");
      out.write("\t\t\t\tto_date : to_date\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar resultCallback = function(data) {\r\n");
      out.write("\t\t\tsLectureListResult(data, currentPage, param);\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tcallAjax(\"/adm/selectCourse.do\", \"post\", \"text\", true, param, resultCallback);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/* 강의 목록 조회 콜백 함수 */\r\n");
      out.write("\tfunction sLectureListResult(data, currentPage, param){\r\n");
      out.write("\t\tconsole.log(\"목록 data 확인\", data);\r\n");
      out.write("\t\t// 기존 목록 삭제\r\n");
      out.write("\t\t$('#crsSizeList').empty();\r\n");
      out.write("\r\n");
      out.write("\t\t// 신규 목록 생성\r\n");
      out.write("\t\t$('#crsSizeList').append(data);\r\n");
      out.write("\r\n");
      out.write("\t\t// 총 개수 추출\r\n");
      out.write("\t\tvar totalCnt = $(\"#totalCnt\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 페이지 네비게이션 생성\r\n");
      out.write("\t\tvar paginationHtml = getPaginationHtml(currentPage, totalCnt, pageSize, pageBlockSize, 'sLectureList');\r\n");
      out.write("\t\t$(\"#Pagination\").empty().append(paginationHtml);\r\n");
      out.write("\r\n");
      out.write("\t\t// 현재 페이지 설정\r\n");
      out.write("\t\t$(\"#currentPage\").val(currentPage);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar key = param.searchWord;\r\n");
      out.write("\t\tvar startDate = param.from_date;\r\n");
      out.write("\t\tvar endDate = param.to_date;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(\"key : \", key);\r\n");
      out.write("\t\tconsole.log(\"startDate : \", startDate);\r\n");
      out.write("\t\tconsole.log(\"endDate : \", endDate);\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/* 차트 관련 정보 조회 */\r\n");
      out.write("\tfunction showChart(lec_id){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#lec_id\").val(lec_id);\r\n");
      out.write("\t\tconsole.log(\"lec_id : \", lec_id);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tgfModalPop(\"#layer3\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : \"/adm/showChart.do\",\r\n");
      out.write("\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\tasync : true,\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\tlec_id : lec_id\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tlec_chart(data);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(xhr, status, err) {\r\n");
      out.write("\t\t\t\tconsole.log(\"xhr : \" + xhr);\r\n");
      out.write("\t\t\t\tconsole.log(\"status : \" + status);\r\n");
      out.write("\t\t\t\tconsole.log(\"err : \" + err);\r\n");
      out.write("\t      \t\t\t\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(data) {\r\n");
      out.write("\t\t\t\t$.unblockUI();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar myChart;\r\n");
      out.write("\t\r\n");
      out.write("\t/* 차트 보여주기 */\r\n");
      out.write("\tfunction lec_chart(data){\r\n");
      out.write("\r\n");
      out.write("\t\tif (myChart) {\r\n");
      out.write("\t\t    myChart.destroy();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(\"차트 데이터 확인 : \", data);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconst courseData = data.courseSizeModel[0];\r\n");
      out.write("\t\tconst ctx = document.getElementById('myChart').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tmyChart = new Chart(ctx, {\r\n");
      out.write("\t\t    type: 'bar',\r\n");
      out.write("\t\t    data: {\r\n");
      out.write("\t\t      labels: ['수강 정원', '수강 인원', '과락 인원'],\r\n");
      out.write("\t\t      datasets: [{\r\n");
      out.write("\t\t        label: courseData.lec_name,\r\n");
      out.write("\t\t        data: [courseData.max_pnum, courseData.pre_pnum, courseData.fail_cnt],\r\n");
      out.write("\t\t        borderWidth: 1\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    options: {\r\n");
      out.write("\t\t      scales: {\r\n");
      out.write("\t\t        y: {\r\n");
      out.write("\t\t          beginAtZero: true\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t      }\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  });\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<form id=\"myForm\" action=\"\" method=\"\">\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"currentPage\" value=\"1\"> \r\n");
      out.write("\t\t<input type=\"hidden\" id=\"lec_id\" value=\"\"> \r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 모달 배경 -->\r\n");
      out.write("\t\t<div id=\"mask\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"wrap_area\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<h2 class=\"hidden\">header 영역</h2>\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<h2 class=\"hidden\">컨텐츠 영역</h2>\r\n");
      out.write("\t\t\t<div id=\"container\">\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li class=\"lnb\">\r\n");
      out.write("\t\t\t\t\t\t<!-- lnb 영역 --> \r\n");
      out.write("\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/lnbMenu.jsp", out, false);
      out.write(" <!--// lnb 영역 -->\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li class=\"contents\">\r\n");
      out.write("\t\t\t\t\t\t<!-- contents -->\r\n");
      out.write("\t\t\t\t\t\t<h3 class=\"hidden\">contents 영역</h3> <!-- content -->\r\n");
      out.write("\t\t\t\t\t\t<div class=\"content\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"Location\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"/dashboard/dashboard.do\" class=\"btn_set home\">메인으로</a> \r\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"\" class=\"btn_nav bold\">통계</a> \r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"btn_nav bold\">수강 인원</span> \r\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"/adm/courseSize.do\" class=\"btn_set refresh\">새로고침</a>\r\n");
      out.write("\t\t\t\t\t\t\t</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<!--학생 목록  -->\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"conTitle\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span>수강 인원</span> <span class=\"fr\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t<select id=\"searchKey\" name=\"searchKey\" style=\"width: 80px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"all\" id=\"all\" selected=\"selected\">전체</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"lec_name\" id=\"lec_name\">강의명</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"tutor_name\" id=\"tutor_name\">강사명</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"searchWord\" name=\"searchWord\" style=\"height: 28px;\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<a class=\"btnType blue\" href=\"javascript:sLectureList()\" name=\"search\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span id=\"searchEnter\">검색</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"fr\">\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"Location\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<Strong>수업일 조회 </Strong>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"date\" id=\"from_date\">~<input type=\"date\" id=\"to_date\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<a class=\"btnType blue\" href=\"javascript:sLectureList()\" name=\"search\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span id=\"searchEnter\">조회</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</a> \t\r\n");
      out.write("\t\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<!--강의 리스트  -->\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"\" id=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<table class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<caption>caption</caption>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"15%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"15%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"10%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"8%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"8%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"8%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"8%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"8%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"8%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">과정명</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">기간</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">강사명</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">수강인원</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">과락인원</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">총점수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">평균</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">최대 점수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">최소 점수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tbody id=\"crsSizeList\"></tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"paging_area\" id=\"Pagination\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div> <!--// content -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<h3 class=\"hidden\">풋터 영역</h3> ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 차트 모달 -->\r\n");
      out.write("\t\t\t<div id=\"layer3\" class=\"layerPop layerType2\" style=\"width: 600px;\">\r\n");
      out.write("\t\t\t<dl>\r\n");
      out.write("\t\t\t\t<dt>\r\n");
      out.write("\t\t\t\t\t<strong>수강 인원</strong>\r\n");
      out.write("\t\t\t\t</dt>\r\n");
      out.write("\t\t\t\t<dd class=\"content\">\r\n");
      out.write("\t\t\t\t\t<!-- s : 여기에 내용입력 -->\r\n");
      out.write("\t\t\t\t\t<table class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t<caption>caption</caption>\r\n");
      out.write("\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<col width=\"33%\">\r\n");
      out.write("\t\t\t\t\t\t\t<col width=\"33%\">\r\n");
      out.write("\t\t\t\t\t\t\t<col width=\"33%\">\r\n");
      out.write("\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t<canvas id=\"myChart\"></canvas>\r\n");
      out.write("\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- e : 여기에 내용입력 -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"btn_areaC mt30\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"\" class=\"btnType gray\" id=\"btnClose\" name=\"btn\"><span>닫기</span></a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</dd>\r\n");
      out.write("\t\t\t</dl>\r\n");
      out.write("\t\t\t<a href=\"\" class=\"closePop\"><span class=\"hidden\">닫기</span></a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
