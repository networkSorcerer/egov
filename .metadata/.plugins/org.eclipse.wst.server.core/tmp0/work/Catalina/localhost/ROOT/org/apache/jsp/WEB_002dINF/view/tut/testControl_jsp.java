/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2024-06-17 10:53:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.tut;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class testControl_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1717304976992L));
    _jspx_dependants.put("jar:file:/C:/Users/user/git/egov/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/marlmsone1/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("<title>시험 관리</title>\r\n");
      out.write("<!-- sweet alert import -->\r\n");
      out.write("<script src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${CTX_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/sweetalert/sweetalert.min.js'></script>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/common_include.jsp", out, false);
      out.write("\r\n");
      out.write("<!-- sweet swal import -->\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t// ajax 처리를 위해서\r\n");
      out.write("\t// 전역 변수\r\n");
      out.write("\tvar pagesize = 10; // -- 한 페이지 당 몇개 보여줄 지\r\n");
      out.write("\tvar pageblocksize = 10; // -- 페이지 당 번호\r\n");
      out.write("\r\n");
      out.write("\t/********* OnLoad event */\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\tlistPage();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfRegisterButtonClickEvent();\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t/********* 버튼 이벤트 등록 */\r\n");
      out.write("\tfunction fRegisterButtonClickEvent() {\r\n");
      out.write("\r\n");
      out.write("\t\t// a 태그의 이름이 btn 인 경우\r\n");
      out.write("\t\t$('a[name=btn]').click(function(e) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 현재 입력된 객체의 id 를 가져옴\r\n");
      out.write("\t\t\tvar btnId = $(this).attr('id');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log(\"btnId 값 확인 : \", btnId);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// id 값으로 행동을 분기\r\n");
      out.write("\t\t\tswitch (btnId) {\r\n");
      out.write("\t\t\tcase 'btnSave':\r\n");
      out.write("\t\t\t\tSave();\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\tcase 'btnDelete':\r\n");
      out.write("\t\t\t\tDelete();\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\tcase 'btnClose':\r\n");
      out.write("\t\t\t\tgfCloseModal();\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/******** 리스트 목록 */\r\n");
      out.write("\tfunction listPage(cpage) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tcpage = cpage || 1; // undefined 일 때 1값 나오게 설정\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar useyn = $(\"#use_yn\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(useyn  == \"\") {\r\n");
      out.write("\t\t\tuseyn = \"Y\";\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t// key : value 의 JSON 형태로 데이터 넘기기\r\n");
      out.write("\t\tvar param = {\r\n");
      out.write("\t\t\tlecList : $(\"#lecList\").val(),\t\r\n");
      out.write("\t\t\tlec_type_id : $(\"#lec_type_id\").val(),\r\n");
      out.write("\t\t\ttest_que : $(\"#test_que\").val(),\r\n");
      out.write("\t\t\tque_ans : $(\"#que_ans\").val(),\r\n");
      out.write("\t\t\tque_ex1 : $(\"#que_ex1\").val(),\r\n");
      out.write("\t\t\tque_ex2 : $(\"#que_ex2\").val(),\r\n");
      out.write("\t\t\tque_ex3 : $(\"#que_ex3\").val(),\r\n");
      out.write("\t\t\tque_ex4 : $(\"#que_ex4\").val(),\r\n");
      out.write("\t\t\tuse_yn : useyn,\r\n");
      out.write("\t\t\tcpage : cpage,\r\n");
      out.write("\t\t\tpagesize : pagesize,\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tvar listcallback = function(response) {\r\n");
      out.write("\t\t\tconsole.log(response);\r\n");
      out.write("\t\t\t$(\"#testPagination\").show();\r\n");
      out.write("\t\t\t$(\"#listTestbody\").empty().append(response);\r\n");
      out.write("\t\t\tconsole.log($(\"#listcnt\").val());\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar paginationHtml = getPaginationHtml(cpage, $(\"#listcnt\").val(),\r\n");
      out.write("\t\t\t\t\tpagesize, pageblocksize, 'listPage');\r\n");
      out.write("\t\t\tconsole.log(\"paginationHtml : \" + paginationHtml);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#testPagination\").empty().append(paginationHtml); \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#cpage\").val(cpage);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t// callAjax(url, method, dataType, async, param, callback)\r\n");
      out.write("\t\t// async : false , sync : true -- 비동기(요청하고 다른 동작 가능) / 동기\r\n");
      out.write("\t\tcallAjax(\"/tut/testList.do\", \"post\", \"text\", false, param, listcallback);\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**********시험 분류 목록 조회 하는 함수*/\r\n");
      out.write("\tfunction lectureList(cpage) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tcpage = cpage || 1; \r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar lec_type_id = $(\"#lecList\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar param = {\r\n");
      out.write("\t\t\t\tlec_type_id : lec_type_id \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(\"=====lec_type_id\" , lec_type_id);\r\n");
      out.write("\t\tvar callback = function(response){\r\n");
      out.write("\t\t\tcallback_lectureList(response, cpage);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tcallAjax(\"/tut/testList.do\", \"post\", \"text\", param, true, callback);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/* 시험 분류 목록 조회 콜백함수 */\r\n");
      out.write("\tfunction callback_lectureList(response, cpage){\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(\"listCnt : \" + $(\"#listCnt\").val());\r\n");
      out.write("\r\n");
      out.write("        $(\"#lec_type_name\").val(data.lec_type_name);\r\n");
      out.write("\t\t$(\"#test_que\").val(data.test_que);\r\n");
      out.write("\t\t$(\"#que_ans\").val(data.que_ans);\r\n");
      out.write("\t\t$(\"#que_ex1\").val(data.que_ex1);\r\n");
      out.write("\t\t$(\"#que_ex2\").val(data.que_ex2);\r\n");
      out.write("\t\t$(\"#que_ex3\").val(data.que_ex3);\r\n");
      out.write("\t\t$(\"#que_ex4\").val(data.que_ex4);\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 총 개수 추출\r\n");
      out.write("\t\tvar lecListCnt = $(\"#listCnt\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 페이지 네비게이션 생성\r\n");
      out.write("\t\tvar paginationHtml = getPaginationHtml( cpage, \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlecListCnt, \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tpagesize, \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tpageblocksize, \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t'lectureList' );\t \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#testPagination\").empty().append( paginationHtml );\r\n");
      out.write("\t\t$(\"#listTestbody\").empty().append(response);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t/**********모달 팝업 하는 함수*/\r\n");
      out.write("\tfunction newreg() {\r\n");
      out.write("\t\tinit();\r\n");
      out.write("\r\n");
      out.write("\t\t// layer1 을 모달 팝업 -> 닫기\r\n");
      out.write("\t\t//alert(\"모달모달\");\r\n");
      out.write("\t\tgfModalPop(\"#layer1\");\r\n");
      out.write("\t\tClose();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction init(data) {\r\n");
      out.write("\t\tif (data != null) {\r\n");
      out.write("\t\t\t$(\"#que_id\").val(data.que_id);\r\n");
      out.write("\t\t\t$(\"#lec_type_id\").val(data.lec_type_id);\r\n");
      out.write("\t\t\t$(\"#test_que\").val(data.test_que);\r\n");
      out.write("\t\t\t$(\"#que_ans\").val(data.que_ans);\r\n");
      out.write("\t\t\t$(\"#que_ex1\").val(data.que_ex1);\r\n");
      out.write("\t\t\t$(\"#que_ex2\").val(data.que_ex2);\r\n");
      out.write("\t\t\t$(\"#que_ex3\").val(data.que_ex3);\r\n");
      out.write("\t\t\t$(\"#que_ex4\").val(data.que_ex4);\r\n");
      out.write("\t\t\t$(\"#inactive\").val(data.use_yn);\r\n");
      out.write("\t\t\t$(\"#action\").val(\"U\"); // 수정일 때 U 값으로 초기화\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t \t$(\"#lec_type_id\").prop(\"disabled\", true);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#lec_type_id\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#test_que\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#que_ans\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#que_ex1\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#que_ex2\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#que_ex3\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#que_ex4\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#inactive\").val(\"\")\r\n");
      out.write("\t\t\t$(\"#action\").val(\"I\"); // 신규 등록일 때 I 값으로 초기화\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/********* 모달에서 글 저장 하는 코드 */\r\n");
      out.write("\tfunction Save() {\r\n");
      out.write("\t\t// 값을 잘 가져오는지 확인\r\n");
      out.write("\t\t//console.log($(\"#test_type_id\").val());\r\n");
      out.write("\t\t//console.log($(\"#test_que\").val());\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(\"Save()함수 실행 \");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 유효성체크하기\r\n");
      out.write("\t\tif (!fValidate()) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 들어온 값을 저장하기위해 값을 저장\r\n");
      out.write("\t\tvar param = {\r\n");
      out.write("\t\t\tlec_type_id : $(\"#lec_type_id\").val(),\r\n");
      out.write("\t\t\ttest_que : $(\"#test_que\").val(),\r\n");
      out.write("\t\t\tque_ans : $(\"#que_ans\").val(),\r\n");
      out.write("\t\t\tque_ex1 : $(\"#que_ex1\").val(),\r\n");
      out.write("\t\t\tque_ex2 : $(\"#que_ex2\").val(),\r\n");
      out.write("\t\t\tque_ex3 : $(\"#que_ex3\").val(),\r\n");
      out.write("\t\t\tque_ex4 : $(\"#que_ex4\").val(),\r\n");
      out.write("\t\t\tuse_yn : $(\"#inactive\").val(),\r\n");
      out.write("\t\t\taction : $(\"#action\").val(),\r\n");
      out.write("\t\t\tque_id : $(\"#que_id\").val()\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//console.log(\" 저장 파람 확인 : \", param);\r\n");
      out.write("\t\tvar savecallback = function(response) {\r\n");
      out.write("\t\t\t// json 형태로 가져오기 때문에 그대로 찍으면 object 로 나옴 -> String 으로 변환하여 출력\r\n");
      out.write("\t\t\tconsole.log(JSON.stringify(response));\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 값이 저장되었는지에 대한 return 을 처리\r\n");
      out.write("\t\t\talert(response.resultMsg);\r\n");
      out.write("\t\t\t// 값 저장 성공시\r\n");
      out.write("\t\t\tif (response.result > 0) {\r\n");
      out.write("\t\t\t\tgfCloseModal();\r\n");
      out.write("\t\t\t\tif ($(\"#action\").val() == \"I\") {\r\n");
      out.write("\t\t\t\t\tlistPage();\r\n");
      out.write("\t\t\t\t} else {\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tlistPage($(\"#cpage\").val());\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\talert(\"저장이 실패되었습니다.\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tcallAjax(\"/tut/testSave.do\", \"post\", \"json\", false, param, savecallback);\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/********* 모달에서 글 수정 하는 코드 */\r\n");
      out.write("\tfunction Modify(que_id) {\r\n");
      out.write("\r\n");
      out.write("\t\t//alert('수정버튼클릭됨 ' + que_id);\r\n");
      out.write("\r\n");
      out.write("\t\tvar param = {\r\n");
      out.write("\t\t\tque_id : que_id\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tconsole.log(param);\r\n");
      out.write("\t\tconsole.log($(\"#test_que\").val());\r\n");
      out.write("\r\n");
      out.write("\t\tvar mdfcallback = function(response) {\r\n");
      out.write("\t\t\tconsole.log(JSON.stringify(response));\r\n");
      out.write("\t\t\tinit(response.selinfo);\r\n");
      out.write("\r\n");
      out.write("\t\t\tgfModalPop(\"#layer1\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tcallAjax(\"/tut/testModifyList.do\", \"post\", \"json\", false, param,\r\n");
      out.write("\t\t\t\tmdfcallback);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// 값이 입력되지 않으면 저장되지 않도록 하는 validation체크 -> true / false 반환\r\n");
      out.write("\t/********** 저장 유효성검사 validation */\r\n");
      out.write("\tfunction fValidate() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar que_ans = document.getElementById(\"que_ans\").value;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(isNaN(que_ans)) {\r\n");
      out.write("\t\t\talert(\"정답은 숫자로 입력해주세요.\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar chk = checkNotEmpty([ [ \"lec_type_id\", \"시험분류를 선택해 주세요.\" ],\r\n");
      out.write("\t\t\t\t[ \"test_que\", \"문제내용을 입력해 주세요\" ], [ \"que_ans\", \"정답을 입력해 주세요\" ],\r\n");
      out.write("\t\t\t\t[ \"que_ex1\", \"보기1을 입력해 주세요\" ], [ \"que_ex2\", \"보기2을 입력해 주세요\" ],\r\n");
      out.write("\t\t\t\t[ \"que_ex3\", \"보기3을 입력해 주세요\" ], [ \"que_ex4\", \"보기4을 입력해 주세요\" ],\r\n");
      out.write("\t\t\t\t[ \"inactive\", \"사용여부 선택해주세요\" ] ]);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (!chk) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/********** 체크박스  코드 */\r\n");
      out.write("\tfunction selectAll() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t    var checkboxes = document.getElementsByClassName('rowCheckbox');\r\n");
      out.write("\t    for (var i = 0; i < checkboxes.length; i++) {\r\n");
      out.write("\t        checkboxes[i].addEventListener('change', updateAllCheckbox);\r\n");
      out.write("\t    }\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tfunction updateAllCheckbox() {\r\n");
      out.write("\t    var checkboxes = document.getElementsByClassName('rowCheckbox');\r\n");
      out.write("\t    var allCheckbox = document.getElementById('allRowCheck');\r\n");
      out.write("\r\n");
      out.write("\t    var allChecked = true;\r\n");
      out.write("\t    for (var i = 0; i < checkboxes.length; i++) {\r\n");
      out.write("\t        if (!checkboxes[i].checked) {\r\n");
      out.write("\t            allChecked = false;\r\n");
      out.write("\t            break;\r\n");
      out.write("\t        } \r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    allCheckbox.checked = allChecked;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\twindow.onload = function() {\r\n");
      out.write("\t    var allCheckbox = document.getElementById('allRowCheck');\r\n");
      out.write("\t    allCheckbox.addEventListener('change', function() {\r\n");
      out.write("\t        var checkboxes = document.getElementsByClassName('rowCheckbox');\r\n");
      out.write("\t        for (var i = 0; i < checkboxes.length; i++) {\r\n");
      out.write("\t            checkboxes[i].checked = allCheckbox.checked;\r\n");
      out.write("\t        }\r\n");
      out.write("\t    });\r\n");
      out.write("\r\n");
      out.write("\t    var checkboxes = document.getElementsByClassName('rowCheckbox');\r\n");
      out.write("\t    for (var i = 0; i < checkboxes.length; i++) {\r\n");
      out.write("\t        checkboxes[i].addEventListener('change', updateAllCheckbox);\r\n");
      out.write("\t    }\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t/********** 비활성화 체크박스 리스트 코드 */\r\n");
      out.write("\tfunction showDeactiveCk() {\r\n");
      out.write("\t\tvar deactiveCheckbox = document.getElementById(\"deactiveCk\");\r\n");
      out.write("\t\tvar use_yn = deactiveCheckbox.checked ? \"N\" : \"Y\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t    document.getElementById('allRowCheck').checked = false;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t if (use_yn === \"N\") { //체크박스가 체크 안되어 있으면 사용여부Y인 데이터와 비활성 버튼 나옴\r\n");
      out.write("\t\t        $(\"#use_yn\").val(\"N\");\r\n");
      out.write("\t\t        $(\"#activebtn\").empty().append(\"활성\");\r\n");
      out.write("\t\t        // $(\"#allRowCheck\").val();\r\n");
      out.write("\t\t    } else if (use_yn === \"Y\") { // 체크박스가 체크되고 사용여부N인 데이터와 활성 버튼 나옴\r\n");
      out.write("\t\t        $(\"#use_yn\").val(\"Y\");\r\n");
      out.write("\t\t        $(\"#activebtn\").empty().append(\"비활성\");\r\n");
      out.write("\t\t        // $(\"#allRowCheck\").val();\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlistPage();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t/**********비활성하는 코드 */\r\n");
      out.write("\tfunction Deactivate(que_id) {\r\n");
      out.write("\t\t//alert('삭제버튼클릭됨 ' + que_id);\r\n");
      out.write("\t\tvar selectedItems = \"\"; // 선택한 항목들을 저장할 배열\r\n");
      out.write("\t\tvar deactiveCheckbox = document.getElementById(\"deactiveCk\");\r\n");
      out.write("\t\tvar checkboxes = document.getElementsByClassName('rowCheckbox');\r\n");
      out.write("\t\t\r\n");
      out.write("\t    document.getElementById('allRowCheck').checked = false;\r\n");
      out.write("\r\n");
      out.write("\t\t// 체크박스 선택 유무를 확인하여 유효성 검사를 수행\r\n");
      out.write("\t    var isChecked = false;\r\n");
      out.write("\t    for (var i = 0; i < checkboxes.length; i++) {\r\n");
      out.write("\t        if (checkboxes[i].checked) {\r\n");
      out.write("\t            isChecked = true;\r\n");
      out.write("\t            break;\r\n");
      out.write("\t        }\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    if (!isChecked) {\r\n");
      out.write("\t        alert(\"문제를 선택해주세요.\");\r\n");
      out.write("\t        return;\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t\tfor (var i = 0; i < checkboxes.length; i++) {\r\n");
      out.write("\t\t\tconsole.log(\"checkBoxed Value\" + i + \":\" + checkboxes[i].checked);\r\n");
      out.write("\t\t\tif (checkboxes[i].checked) {\r\n");
      out.write("\t\t\t\tselectedItems += checkboxes[i].getAttribute('data-item-id')\r\n");
      out.write("\t\t\t\t\t\t+ \",\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar data = {\r\n");
      out.write("\t\t\tque_id : selectedItems,\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tcallAjax(\"/tut/testDeactivate.do\", \"post\", \"json\", false, data,\r\n");
      out.write("\t\t\t\tfunction(response) {\r\n");
      out.write("\t\t\t\t\talert(response.deactResultMsg);\r\n");
      out.write("\t\t\t\t\tconsole.log(response); \r\n");
      out.write("\t\t\t\t\t if(response.result === \"SUCCESS\") {\r\n");
      out.write("\t\t\t\t\t\t listPage();\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<form id=\"myForm\" action=\"\" method=\"\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!--\r\n");
      out.write("\t\t신규와 수정을 동일한 창으로 넘기기 때문에 flag 값을 주어 확인할 수 있도록 한다\r\n");
      out.write("\t\t초기 값 = 빈값\r\n");
      out.write("\t\t수정할 때, 게시판 번호 사용하기 위해서 hidden \r\n");
      out.write("\t -->\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"action\" name=\"action\" value=\"\" /> \r\n");
      out.write("\t\t<input type=\"hidden\" id=\"que_id\" name=\"que_id\" value=\"\" />\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"use_yn\" name=\"use_yn\" value=\"\" />\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 모달 배경 -->\r\n");
      out.write("\t\t<div id=\"mask\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"wrap_area\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<h2 class=\"hidden\">header 영역</h2>\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<h2 class=\"hidden\">컨텐츠 영역</h2>\r\n");
      out.write("\t\t\t<div id=\"container\">\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li class=\"lnb\">\r\n");
      out.write("\t\t\t\t\t\t<!-- lnb 영역 --> ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/lnbMenu.jsp", out, false);
      out.write(" <!--// lnb (메뉴) 영역 -->\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li class=\"contents\">\r\n");
      out.write("\t\t\t\t\t\t<!-- contents -->\r\n");
      out.write("\t\t\t\t\t\t<h3 class=\"hidden\">contents 영역</h3> <!-- content -->\r\n");
      out.write("\t\t\t\t\t\t<div class=\"content\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"Location\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"../notice/notice.do\" class=\"btn_set home\">메인으로</a> <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"btn_nav bold\">학습 관리</span> <span class=\"btn_nav bold\">시험\r\n");
      out.write("\t\t\t\t\t\t\t\t\t관리 </span> <a href=\"/tut/testControl.do\" class=\"btn_set refresh\">새로고침</a>\r\n");
      out.write("\t\t\t\t\t\t\t</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"conTitle\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span>시험 문제 관리</span> <span class=\"fr\"> <label\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor=\"deactiveCk\"> <input type=\"checkbox\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tname=\"deactiveCk\" id=\"deactiveCk\" onchange=\"showDeactiveCk(event)\"> 비활성화 문제&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t</label> \r\n");
      out.write("\t\t\t\t\t\t\t\t<select id=\"lecList\" style=\"width: 200px\"; onchange=\"listPage()\">\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"\">시험분류 선택</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t</select>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t&nbsp; <a class=\"btnType blue\" href=\"javascript:newreg();\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname=\"newreg\" id=\"newreg\"><span>문제등록</span></a>\r\n");
      out.write("\t\t\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t\t</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"divComGrpCodList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<table class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<caption>caption</caption>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"8%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"8%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"20%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"5%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"10%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"10%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"10%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"10%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<col width=\"8%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">전체선택&nbsp;<input type=\"checkbox\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname=\"allRowCheck\" id=\"allRowCheck\" onclick='selectAll()'></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">시험분류</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">문제</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">정답</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">보기1</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">보기2</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">보기3</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">보기4</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"><div class=\"btn_areaC\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<a class=\"btnType3 color1\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:Deactivate('que_id');\"><span id=\"activebtn\" >비활성</span></a></th>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tbody id=\"listTestbody\"></tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"paging_area\" id=\"testPagination\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</div> <!--// content -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<h3 class=\"hidden\">풋터 영역</h3> ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 모달팝업 -->\r\n");
      out.write("\t\t<div id=\"layer1\" class=\"layerPop layerType2\" style=\"width: 600px;\">\r\n");
      out.write("\t\t\t<dl>\r\n");
      out.write("\t\t\t\t<dt>\r\n");
      out.write("\t\t\t\t\t<strong>시험문제 등록</strong>\r\n");
      out.write("\t\t\t\t</dt>\r\n");
      out.write("\t\t\t\t<dd class=\"content\">\r\n");
      out.write("\t\t\t\t\t<!-- s : 여기에 내용입력 -->\r\n");
      out.write("\t\t\t\t\t<table class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t<caption>caption</caption>\r\n");
      out.write("\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<col width=\"120px\">\r\n");
      out.write("\t\t\t\t\t\t\t<col width=\"*\">\r\n");
      out.write("\t\t\t\t\t\t\t<col width=\"120px\">\r\n");
      out.write("\t\t\t\t\t\t\t<col width=\"*\">\r\n");
      out.write("\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"row\">시험분류<span class=\"font_red\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"7\"><select name=\"sort\" id=\"lec_type_id\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"width: 100%;\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"row\">문제 <span class=\"font_red\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"7\"><textarea name=\"test_que\" id=\"test_que\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"inputTxt p100\" cols=\"40\" rows=\"1\"></textarea></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"row\">정답 <span class=\"font_red\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"3\"><input type=\"text\" class=\"inputTxt p50\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname=\"que_ans\" id=\"que_ans\" /></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"row\">보기1 <span class=\"font_red\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"7\"><textarea name=\"que_ex1\" id=\"que_ex1\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"inputTxt p100\" cols=\"40\" rows=\"1\"></textarea></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"row\">보기2<span class=\"font_red\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"7\"><textarea name=\"que_ex2\" id=\"que_ex2\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"inputTxt p100\" cols=\"40\" rows=\"1\"></textarea></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"row\">보기3 <span class=\"font_red\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"7\"><textarea name=\"que_ex3\" id=\"que_ex3\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"inputTxt p100\" cols=\"40\" rows=\"1\"></textarea></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"row\">보기4 <span class=\"font_red\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"7\"><textarea name=\"que_ex4\" id=\"que_ex4\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"inputTxt p100\" cols=\"40\" rows=\"1\"></textarea></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"row\">사용여부<span class=\"font_red\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"7\"><select name=\"inactive\" id=\"inactive\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"width: 100%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"Y\">활성화</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"N\">비활성화</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</tbody>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- e : 여기에 내용입력 -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"btn_areaC mt30\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"\" class=\"btnType blue\" id=\"btnSave\" name=\"btn\"><span>저장</span></a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"\" class=\"btnType gray\" id=\"btnClose\" name=\"btn\"><span>취소</span></a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</dd>\r\n");
      out.write("\t\t\t</dl>\r\n");
      out.write("\t\t\t<a href=\"\" class=\"closePop\"><span class=\"hidden\">닫기</span></a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!--// 모달팝업 -->\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/view/tut/testControl.jsp(463,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/view/tut/testControl.jsp(463,10) '${lecList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${lecList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/view/tut/testControl.jsp(463,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("list");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.lec_type_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.lec_type_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/view/tut/testControl.jsp(544,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/view/tut/testControl.jsp(544,10) '${lecList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${lecList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/view/tut/testControl.jsp(544,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("list");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.lec_type_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.lec_type_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
