/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2024-06-15 11:24:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.std;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class stdLearnMaterials_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Users/user/git/egov/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/marlmsone1/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1717304976992L));
    _jspx_dependants.put("jar:file:/C:/Users/user/git/egov/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/marlmsone1/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("<title>학습자료</title>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/common_include.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t// 페이징 설정\r\n");
      out.write("\tvar pageSize = 10;\r\n");
      out.write("\tvar pageBlock = 5;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function(e) {\r\n");
      out.write("\t\tconsole.log(\"stdlearning\");\r\n");
      out.write("\t\tfRegisterButtonClickEvent();\r\n");
      out.write("\t\tlearnMatList();\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t\tfunction fRegisterButtonClickEvent() {\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#searchEnter\").click(function(e) {\r\n");
      out.write("\t\t\t// ?\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\r\n");
      out.write("\t\t\tlearnMatList();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// a 태그의 이름이 btn 인 경우\r\n");
      out.write("\t\t$('a[name=btn]').click(function(e) {\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 현재 입력된 객체의 id 를 가져옴\r\n");
      out.write("\t\t\tvar btnId = $(this).attr('id');\r\n");
      out.write("\r\n");
      out.write("\t\t\t// id 값으로 행동을 분기\r\n");
      out.write("\t\t\tswitch (btnId) {\r\n");
      out.write("\t\t\tcase 'btnClose':\r\n");
      out.write("\t\t\t\tgfCloseModal();\r\n");
      out.write("\t\t\t\tcancleBtn()\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction learnMatList(currentPage) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tcurrentPage = currentPage || 1;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar param = {\r\n");
      out.write("\t\t\t\tpageSize : pageSize,\r\n");
      out.write("\t\t\t\tcurrentPage : currentPage,\r\n");
      out.write("\t\t\t\tsearchInfo : $(\"#searchInfo\").val(),\r\n");
      out.write("\t\t\t\tsearchKey : $(\"#searchKey\").val()\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\tconsole.log(\"param : \", param);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : '/std/stdLearnMatList.do',\r\n");
      out.write("\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\tdata : param,\r\n");
      out.write("\t\t\tasync : true,\r\n");
      out.write("\t\t\tdataType : \"text\",\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\tgetlearnMatList(data, currentPage);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(error) {\r\n");
      out.write("\t\t\t\tconsole.log(error)\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction getlearnMatList(data, currentPage){\r\n");
      out.write("\t\tconsole.log(\"data : \" , data);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#listStdMat\").empty().append(data);\r\n");
      out.write("\t\tconsole.log(\"listStdMat : \", data);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar totCnt = $(\"#totalCount\").val();\r\n");
      out.write("\t\tconsole.log(\"totCnt : \" , totCnt);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar paginationHtml = getPaginationHtml(currentPage, totCnt, pageSize,\r\n");
      out.write("\t\t\t\tpageBlock, 'learnMatList');\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(currentPage);\r\n");
      out.write("\t\tconsole.log(totCnt);\r\n");
      out.write("\t\tconsole.log(pageSize);\r\n");
      out.write("\t\tconsole.log(pageBlock);\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(\"paginationHtml : \" + paginationHtml);\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#pagination\").empty().append(paginationHtml);\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#currentPage\").val(currentPage);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 학습자료 등록 모달 띄우기\r\n");
      out.write("\tfunction fPopModalMat(){\r\n");
      out.write("\t\tconsole.log(\"fPopModalMat\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t gfModalPop(\"#layer1\");\r\n");
      out.write("\t\t//데이터 넣기 \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction stdLectureDetail(data) {\r\n");
      out.write("\t\tconsole.log(\"learnMaterialsDetail : \", data);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : '/std/stdLearnMatDetail.do',\r\n");
      out.write("\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\tlearn_data_id : data,\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tasync : true,\r\n");
      out.write("\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(\"모달 데이터 : \", data);\t\t\t\r\n");
      out.write("\t\t\t\t gfModalPop(\"#layer1\");\r\n");
      out.write("\t\t\t\t init(data.std_detail);\r\n");
      out.write("\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(error) {\r\n");
      out.write("\t\t\t\tconsole.log(error)\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\t\r\n");
      out.write("\t\tgfModalPop(\"#layer1\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction init(data) {\r\n");
      out.write("\t\tconsole.log(\"init 데이터 확인 : \", data);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#learn_tit\").val(data.learn_tit)\r\n");
      out.write("\t\t$(\"#w_date\").val(data.w_date)\r\n");
      out.write("\t\t$(\"#learn_con\").val(data.learn_con)\r\n");
      out.write("\t\t$(\"#learn_fname\").text(data.learn_fname)\r\n");
      out.write("\t\t$(\"#learn_data_id\").text(data.learn_data_id);\r\n");
      out.write("\t\tif(data.learn_fname != null) {\r\n");
      out.write("\t\t\t$(\"#learn_fname\").attr(\"href\", \"javascript:downloadStd('\" + data.learn_url + \"', '\" + data.learn_fname + \"', \" + data.learn_data_id + \")\");\r\n");
      out.write("\t\t\t$(\"#learn_fname\").text(data.learn_fname);\r\n");
      out.write("\t\t}else {\r\n");
      out.write("\t\t\t$(\"#learn_fname\").text(\"첨부파일 없음\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction downloadStd(url, fname, learn_data_id){\r\n");
      out.write("\t\t alert(\"다운로드 하시겠습니까?\")\r\n");
      out.write("\t     $(\"#learn_data_id\").val(learn_data_id);\r\n");
      out.write("\t    \r\n");
      out.write("\t\tvar params = \"<input type='hidden' name='learn_data_id' value='\"+ learn_data_id +\"' />\";\r\n");
      out.write("           params += \"<input type='hidden' name='file_path' value='\"+ url +\"' />\";\r\n");
      out.write("           params += \"<input type='hidden' name='file_name' value='\"+ fname +\"' />\";\r\n");
      out.write("           $(\"<form action='fileDownload.do' method='post' id='fileDownload'>\" + params + \"</form>\").appendTo('body').submit().remove();\r\n");
      out.write("           console.log(params);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form id=\"myForm\" action=\"\"  method=\"\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"action\" id=\"action\" value=\"\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"currentPage\" value=\"1\">\r\n");
      out.write("\t<input type=\"hidden\"  id=\"learn_data_id\"  name=\"learn_data_id\"  value=\"\" />\r\n");
      out.write("\r\n");
      out.write("\t<!-- 모달 배경 -->\r\n");
      out.write("\t<div id=\"mask\"></div>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"wrap_area\">\r\n");
      out.write("\r\n");
      out.write("\t\t<h2 class=\"hidden\">header 영역</h2>\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<h2 class=\"hidden\">컨텐츠 영역</h2>\r\n");
      out.write("\t\t<div id=\"container\">\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li class=\"lnb\">\r\n");
      out.write("\t\t\t\t\t<!-- lnb 영역 --> ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/lnbMenu.jsp", out, false);
      out.write(" <!--// lnb 영역 -->\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li class=\"contents\">\r\n");
      out.write("\t\t\t\t\t<!-- contents -->\r\n");
      out.write("\t\t\t\t\t<h3 class=\"hidden\">contents 영역</h3> <!-- content -->\r\n");
      out.write("\t\t\t\t\t<div class=\"content\">\r\n");
      out.write("\t\t\t\t\t\t<p class=\"Location\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"#\" class=\"btn_set home\">메인으로</a> <a href=\"#\"\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"btn_nav\">학습 관리</a> <span class=\"btn_nav bold\">학습 자료</span> <a href=\"#\" class=\"btn_set refresh\">새로고침</a>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<p class=\"conTitle\" id=\"searcharea\">\r\n");
      out.write("\t\t\t\t\t\t\t<span>학습 자료</span> \r\n");
      out.write("\t\t\t\t\t\t\t <span class=\"fr\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t<select id=\"searchKey\" name=\"searchKey\" style=\"width: 80px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"all\" id=\"all\" selected=\"selected\">전체</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"title\" id=\"title\">제목</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"lec_name\" id=\"lec_name\">강의명</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t</select> <input type=\"text\" id=\"searchInfo\" name=\"searchInfo\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"form-control\" placeholder=\"\" style=\"height: 28px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- // searchbar --> <!-- button --> <a class=\"btnType blue\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\thref=\"\" name=\"searchEnter\" id=\"searchEnter\"><span>검색</span></a>\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div class=\"divMatList\" id=\"divMatList\">\r\n");
      out.write("\t\t\t\t\t\t\t<table class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<caption>caption</caption>\r\n");
      out.write("\t\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t    <col width=\"15%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t    <col width=\"20%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col width=\"40%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col width=\"25%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    <th scope=\"col\">NO</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    <th scope=\"col\">강의명</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">등록일</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tbody id=\"listStdMat\"></tbody>\r\n");
      out.write("\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t<div class=\"paging_area\"  id=\"pagination\"> </div>\r\n");
      out.write("\t\t\t\t\t<h3 class=\"hidden\">풋터 영역</h3>\r\n");
      out.write("\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"layer1\" class=\"layerPop layerType2\" style=\"width: 600px;\">\r\n");
      out.write("         <dl>\r\n");
      out.write("            <dt>\r\n");
      out.write("               <strong>학습자료</strong>\r\n");
      out.write("            </dt>\r\n");
      out.write("            <dd class=\"content\" >\r\n");
      out.write("                  <table class=\"row\">\r\n");
      out.write("              <caption>caption</caption>\r\n");
      out.write("            <tbody>\r\n");
      out.write("            <tr> \r\n");
      out.write("                <th scope=\"row\">제목</th>\r\n");
      out.write("               <td>\r\n");
      out.write("               <input type =\"text\"  id=\"learn_tit\"   name =\"learn_tit\" class=\"inputTxt p100\" readonly>\r\n");
      out.write("               </td>\r\n");
      out.write("               <th scope=\"row\">등록일자 </th>\r\n");
      out.write("               <td>\r\n");
      out.write("               <input type =\"text\" id=\"w_date\" name =\"w_date\" class=\"inputTxt p100\" readonly>\r\n");
      out.write("               \r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <th scope=\"row\">내용</th>\r\n");
      out.write("               <td  id=\"con\" colspan=\"6\">\r\n");
      out.write("                  <textarea class=\"inputTxt p100\" id=\"learn_con\"  name =\"learn_con\" style=\"width:100%; border:0; resize:none;\" readonly></textarea>\r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <th scope=\"row\">첨부파일</th>\r\n");
      out.write("               <td colspan=\"6\">\r\n");
      out.write("               <a href=\"#\" id=\"learn_fname\"  name=\"learn_fname\" readonly></a><br/>                                      \r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("             </tbody> \r\n");
      out.write("          </table>\r\n");
      out.write("       \t\t\t<div class=\"btn_areaC mt30\">\r\n");
      out.write("\t\t\t\t\t<a href=\"\"\tclass=\"btnType gray\"  id=\"btnClose\" name=\"btn\"><span>닫기</span></a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("               </dd>\r\n");
      out.write("\t\t\t</dl>\r\n");
      out.write("\r\n");
      out.write("\t\t<a href=\"javascript:cancleBtn();\" class=\"closePop\" id=\"btnClose\" name=\"btn\"><span class=\"hidden\">닫기</span></a>\t\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
