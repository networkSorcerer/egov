/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2024-06-17 09:55:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.tut;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class tutorLearnMaterials_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Users/user/git/egov/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/marlmsone1/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1717304976992L));
    _jspx_dependants.put("jar:file:/C:/Users/user/git/egov/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/marlmsone1/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("<title>JobKorea</title>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/common_include.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t// 페이징 설정\r\n");
      out.write("\tvar pageSize = 10;\r\n");
      out.write("\tvar pageBlock = 5;\r\n");
      out.write("\r\n");
      out.write("\tvar status = \"insert\"\r\n");
      out.write("\t\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t\tgetLearnMatList()\r\n");
      out.write("\t\t\ttoggleButtons(status);\r\n");
      out.write("\t});\t\r\n");
      out.write("\t\r\n");
      out.write("\t// 모달 창 저장, 수정 버튼 변화\r\n");
      out.write("\tfunction toggleButtons(status) {\r\n");
      out.write("\t       var btnSave = document.getElementById(\"btnSave\");\r\n");
      out.write("\t       var btnUpdate = document.getElementById(\"btnUpdate\");\r\n");
      out.write("\t       var lectureList = document.getElementById(\"lectureList\");\r\n");
      out.write("\t       var downFileCol = document.getElementById(\"disfilename\"); \r\n");
      out.write("\t       \r\n");
      out.write("\t       if(status === 'insert') {\r\n");
      out.write("\t    \t   btnSave.style.display = \"inline-block\"\r\n");
      out.write("\t    \t   btnUpdate.style.display = \"none\"\r\n");
      out.write("\t    \t\tdownFileCol.style.display = \"none\";\r\n");
      out.write("\t       } else if(status === \"update\") {\r\n");
      out.write("\t    \t   btnSave.style.display = \"none\"\r\n");
      out.write("\t    \t  btnUpdate.style.display = \"inline-block\"\r\n");
      out.write("\t    \t  lectureList.style.display = \"none\";\r\n");
      out.write("\t    \t   downFileCol.style.display = \"inline-block\";\r\n");
      out.write("\t       }\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 학습자료 리스트\r\n");
      out.write("\tfunction getLearnMatList(currentPage) {\r\n");
      out.write("\t\tvar tutorId = $(\"#tutorId\").val();\r\n");
      out.write("\t\tvar lecture_value = $(\"#searchKey\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tcurrentPage = currentPage || 1;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(\"currentPage = \" + currentPage);\r\n");
      out.write("\t\tconsole.log(\"lecture_value = \" + lecture_value);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar param = {\r\n");
      out.write("\t\t\t\ttutorId : tutorId,\r\n");
      out.write("\t\t\t\tlectureValue : lecture_value,\r\n");
      out.write("\t\t\t\tcurrentPage: currentPage,\r\n");
      out.write("\t\t\t\tpageSize : pageSize,\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(param);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:'/tut/tutorLearnMatList',\r\n");
      out.write("\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\tdataType:\"text\",\r\n");
      out.write("\t\t\tasync: true,\r\n");
      out.write("\t\t\tdata: param,\r\n");
      out.write("\t\t\tsuccess:function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\tlearnMatListResult(data, currentPage);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(error) {\r\n");
      out.write("\t\t\t\tconsole.log(error);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 학습자료 리스트 화면에 보이기\r\n");
      out.write("\tfunction learnMatListResult(data, currentPage) {\r\n");
      out.write("\t\tconsole.log(\"data = \" + data);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#listMat\").empty();\r\n");
      out.write("\t\t$(\"#listMat\").append(data)\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar totalCount = $(\"#totalCount\").val();\r\n");
      out.write("\t\tconsole.log(\"totalCount : \" + totalCount);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar paginationHtml = getPaginationHtml(currentPage, totalCount, pageSize, pageBlock, 'getLearnMatList');\r\n");
      out.write("\t\tconsole.log(\"paginationHtml : \" + paginationHtml);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#pagination\").empty().append(paginationHtml);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#currentPage\").val(currentPage);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// 학습자료 등록 모달 띄우기\r\n");
      out.write("\tfunction fPopModalMat(){\r\n");
      out.write("\t\tconsole.log('fPopModalMat test');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//lecture_list();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t gfModalPop(\"#mat_de\");\r\n");
      out.write("\t\t//데이터 넣기 \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//학습자료 저장\r\n");
      out.write("\tfunction learningMaterialsSave() {\r\n");
      out.write("\t\tconsole.log('test')\r\n");
      out.write("\t\tconsole.log('fsave test')\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar lecture_value = $(\"#lecture_value\").val();\r\n");
      out.write("\t\tvar title = $(\"#learn_tit\").val();\r\n");
      out.write("\t\tvar content = $('#learn_con').val();\r\n");
      out.write("\t\tvar file = $(\"#bbs_files_1\").prop('files')[0];\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(\"lecture_value : \" + lecture_value);\r\n");
      out.write("\t\tconsole.log(\"title : \" + title);\r\n");
      out.write("\t\tconsole.log(\"content : \" + content);\r\n");
      out.write("\t\tconsole.log(file);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(! fValidateLearnMat()) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar formData = new FormData();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\tformData.append('lecture_value', lecture_value)\r\n");
      out.write("\t\tformData.append('title', title)\r\n");
      out.write("\t\tformData.append('content', content)\r\n");
      out.write("\t\tformData.append('file', file);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:'/tut/saveLearningMaterials.do',\r\n");
      out.write("\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\tasync : true,\r\n");
      out.write("\t\t\tdata: formData,\r\n");
      out.write("\t\t\tprocessData: false,\r\n");
      out.write("\t\t\tcontentType: false,\r\n");
      out.write("\t\t\tcache : false,\r\n");
      out.write("\t\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\tif(data == true) {\r\n");
      out.write("\t\t\t\t\talert(\"강의자료가 등록 되었습니다.\");\r\n");
      out.write("\t\t\t\t\tlocation.reload(true)\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(\"다시 강의자료를 등록해주세요\");\r\n");
      out.write("\t\t\t\t\tlocation.reload(true)\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(err) {\r\n");
      out.write("\t\t\t\tconsole.log(err);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction fValidateLearnMat() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar chk = checkNotEmpty(\r\n");
      out.write("\t\t\t\t[\r\n");
      out.write("\t\t\t\t\t\t[ \"learn_tit\",  \"제목을 입력해 주세요.\" ]\r\n");
      out.write("\t\t\t\t\t,\t[ \"learn_con\", \"내용을 입력해 주세요\" ]\r\n");
      out.write("\t\t\t\t\t,\t[ \"bbs_files_1\", \"파일을 등록해 주세요.\" ]\r\n");
      out.write("\t\t\t\t]\r\n");
      out.write("\t\t);\r\n");
      out.write("\r\n");
      out.write("\t\tif (!chk) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//학습자료 상세 정보 불러오기\r\n");
      out.write("\tfunction learningMaterialsDetail(data) {\r\n");
      out.write("\t\tconsole.log(\"learningMaterialsDetail tset\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tstatus = \"update\"\r\n");
      out.write("\t\ttoggleButtons(status);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar learnDataId = data;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(\"learnDataId : \" + data);\r\n");
      out.write("\t\tgfModalPop(\"#mat_de\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:'/tut/getDetailLearnMat.do',\r\n");
      out.write("\t\t\ttype:\"GET\",\r\n");
      out.write("\t\t\tasync : true,\r\n");
      out.write("\t\t\tdata: {\r\n");
      out.write("\t\t\t\tlearnDataId : learnDataId\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(data.detailLearnMat);\r\n");
      out.write("\t\t\t\tdetailLearnMatForm(data.detailLearnMat)\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(err) {\r\n");
      out.write("\t\t\t\tconsole.log(err);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 학습자료 수정 창 초기폼\r\n");
      out.write("\tfunction detailLearnMatForm(data) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar isoDate = data.writeDate;\r\n");
      out.write("\t\tvar date = new Date(isoDate);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar formattedDate = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#learnMatId\").val(data.learn_data_id);\r\n");
      out.write("\t\t$(\"#learn_tit\").val(data.learnTitle);\r\n");
      out.write("\t\t$(\"#w_date\").val(formattedDate);\r\n");
      out.write("\t\t$(\"#learn_con\").val(data.learnContent);\r\n");
      out.write("\t\t$(\"#fileDownLoad\").text(data.materials_orginal_fname);\r\n");
      out.write("\t\t$(\"#fileDownLoad\").attr('href', \"/tut/fileDownload/\" + data.materials_fname);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//학습자료 수정\r\n");
      out.write("\tfunction learningMaterialsUpdate() {\r\n");
      out.write("\t\tvar learnMatId = $(\"#learnMatId\").val();\r\n");
      out.write("\t\tconsole.log(learnMatId);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar updateLearnTitle =  $(\"#learn_tit\").val();\r\n");
      out.write("\t\tvar updateLearnContent = $(\"#learn_con\").val();\r\n");
      out.write("\t\tvar file = $(\"#bbs_files_1\").prop('files')[0];\r\n");
      out.write("\t\r\n");
      out.write("\t\tconsole.log(\"updateLearnTitle : \"  + updateLearnTitle);\r\n");
      out.write("\t\tconsole.log(\"updateLearnContent : \"  + updateLearnContent);\r\n");
      out.write("\t\tconsole.log(file);\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar formData = new FormData();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tformData.append(\"learnMatId\", learnMatId);\r\n");
      out.write("\t\tformData.append(\"updateLearnTitle\", updateLearnTitle);\r\n");
      out.write("\t\tformData.append(\"updateLearnContent\", updateLearnContent);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(file === null || file === undefined || file === '') {\r\n");
      out.write("\t\t\tconsole.log(\"update File 없음\");\r\n");
      out.write("\t\t\tformData.append(\"file\", null);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tconsole.log('update File 있음');\r\n");
      out.write("\t\t\tformData.append(\"updateFile\", file);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar param = {\r\n");
      out.write("\t\t\t\tlearnMatId : learnMatId,\r\n");
      out.write("\t\t\t\tupdateLearnTitle : updateLearnTitle,\r\n");
      out.write("\t\t\t\tupdateLearnContent : updateLearnContent,\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: '/tut/updateLearnMat.do',\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\tasync: true,\r\n");
      out.write("\t\t\tdata: formData,\r\n");
      out.write("\t\t\tprocessData: false,\r\n");
      out.write("\t\t\tcontentType: false,\r\n");
      out.write("\t\t\tcache : false,\r\n");
      out.write("\t\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(data)\r\n");
      out.write("\t\t\t\tif(data === true) {\r\n");
      out.write("\t\t\t\t\talert(\"수정이 완료 되었습니다.\")\r\n");
      out.write("\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(error) {\r\n");
      out.write("\t\t\t\tconsole.log(error);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 학습자료 삭제\r\n");
      out.write("\tfunction learningMaterailsDelete() {\r\n");
      out.write("\t\tvar learnMatId = $(\"#learnMatId\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:'/tut/deleteLearnMat.do/' + learnMatId,\r\n");
      out.write("\t\t\ttype: \"GET\",\r\n");
      out.write("\t\t\tasync: true,\r\n");
      out.write("\t\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(data)\r\n");
      out.write("\t\t\t\tif(data === true) {\r\n");
      out.write("\t\t\t\t\talert(\"학습자료가 삭제 되었습니다.\")\r\n");
      out.write("\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(error) {\r\n");
      out.write("\t\t\t\tconsole.log(error);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 학습자료 등록 validation check\r\n");
      out.write("\tfunction tutorLearnValidateCheck(title, content, file) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(\"file value : \" +  file);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar totalStatus = false;\r\n");
      out.write("\t\tvar titleStatus  = false;\r\n");
      out.write("\t\tvar contentStatus  = false;\r\n");
      out.write("\t\tvar fileStatus = false;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(title.trim() === \"\") {\r\n");
      out.write("\t\t\talert(\"제목을 입력해주세요.\")\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\ttitleStatus = true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(content.trim() === \"\") {\r\n");
      out.write("\t\t\talert('내용을 입력해주세요')\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tcontentStatus = true;\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(file === undefined || file === null || file === \"\") {\r\n");
      out.write("\t\t\talert(\"첨부파일을 등록해주세요\")\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tfileStatus = true\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(titleStatus === true && contentStatus === true && fileStatus === true) {\r\n");
      out.write("\t\t\treturn true\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 강의목록 리스트 Select Box\r\n");
      out.write("\t\t/*\r\n");
      out.write("\tfunction lecture_list() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar tutorId = $(\"#tutorId\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(tutorId);\r\n");
      out.write("\t\tvar param = {\r\n");
      out.write("\t\t\t\ttutorId : tutorId\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:'/tut/lectureList.do',\r\n");
      out.write("\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\tasync : true,\r\n");
      out.write("\t\t\tdata: param,\r\n");
      out.write("\t\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(data.lectureList);\r\n");
      out.write("\t\t\t\tloadingLectureList(data.lectureList);\r\n");
      out.write("\t\t\t\tloadingSearchKeyList(data.lectureList);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(err) {\r\n");
      out.write("\t\t\t\tconsole.log(err);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction loadingSearchKeyList(lectureData) {\r\n");
      out.write("\t\tvar selectElement = document.getElementById('searchKey');\r\n");
      out.write("\t\tselectElement.HTML = \"\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i = 0; i < lectureData.length; i++) {\r\n");
      out.write("\t\t\tvar lecture = lectureData[i];\r\n");
      out.write("\t\t\tif(lecture.lec_name != null) {\r\n");
      out.write("\t\t\t\taddOption(selectElement, lecture.lec_id, lecture.lec_name);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction loadingLectureList(lectureData) {\r\n");
      out.write("\t\tconsole.log(\"lectureList : \" + lectureData);\r\n");
      out.write("\t\tvar selectElement = document.getElementById('lecture_value');\r\n");
      out.write("\t\tselectElement.HTML = \"\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i = 0; i < lectureData.length; i++) {\r\n");
      out.write("\t\t\tvar lecture = lectureData[i];\r\n");
      out.write("\t\t\tif(lecture.lec_name != null) {\r\n");
      out.write("\t\t\t\taddOption(selectElement, lecture.lec_id, lecture.lec_name);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction addOption(selectElement, value, text) {\r\n");
      out.write("\t\tvar option = document.createElement(\"option\");\r\n");
      out.write("\t\toption.value = value;\r\n");
      out.write("\t\toption.text = text;\r\n");
      out.write("\t\tconsole.log(option.value);\r\n");
      out.write("\t\tselectElement.appendChild(option);\r\n");
      out.write("\t}\r\n");
      out.write("\t*/\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("\t.detailLearnMat {\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#fileDownLoad {\r\n");
      out.write("\t\tfont-weight: bold;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form id=\"myForm\" action=\"\"  method=\"\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"action\" id=\"action\" value=\"\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"currentPageCourse\" id=\"currentPageCourse\" value=\"\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"delCourseno\" id=\"delCourseno\" value=\"\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"currentPage\" value=\"1\">\r\n");
      out.write("\r\n");
      out.write("\t<!-- 모달 배경 -->\r\n");
      out.write("\t<div id=\"mask\"></div>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"wrap_area\">\r\n");
      out.write("\r\n");
      out.write("\t\t<h2 class=\"hidden\">header 영역</h2>\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<h2 class=\"hidden\">컨텐츠 영역</h2>\r\n");
      out.write("\t\t<div id=\"container\">\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li class=\"lnb\">\r\n");
      out.write("\t\t\t\t\t<!-- lnb 영역 --> ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/lnbMenu.jsp", out, false);
      out.write(" <!--// lnb 영역 -->\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li class=\"contents\">\r\n");
      out.write("\t\t\t\t\t<!-- contents -->\r\n");
      out.write("\t\t\t\t\t<h3 class=\"hidden\">contents 영역</h3> <!-- content -->\r\n");
      out.write("\t\t\t\t\t<div class=\"content\">\r\n");
      out.write("\t\t\t\t\t\t<p class=\"Location\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"#\" class=\"btn_set home\">메인으로</a> <a href=\"#\"\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"btn_nav\">학습 관리</a> <span class=\"btn_nav bold\">학습 자료</span> <a href=\"#\" class=\"btn_set refresh\">새로고침</a>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<p class=\"conTitle\" id=\"searcharea\">\r\n");
      out.write("\t\t\t\t\t\t\t<span>학습 자료</span> \r\n");
      out.write("\t\t\t\t\t\t\t <span class=\"fr\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t<select id=\"searchKey\" name=\"searchKey\" style=\"width: 150px;\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t \t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t</select> \r\n");
      out.write("\t\t\t \t\t\t\t<a class=\"btnType blue\" href=\"javascript:getLearnMatList()\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tonkeydown=\"enterKey()\" name=\"search\"><span id=\"searchEnter\">검색</span></a>\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    <a class=\"btnType blue\" href=\"javascript:fPopModalMat();\" name=\"modal\"><span>학습 자료 등록</span></a>\r\n");
      out.write("\t\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div class=\"divMatList\" id=\"divMatList\">\r\n");
      out.write("\t\t\t\t\t\t\t<table class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<caption>caption</caption>\r\n");
      out.write("\t\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t    <col width=\"15%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col width=\"50%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col width=\"35%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    <th scope=\"col\">NO</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">등록일</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tbody id=\"listMat\"></tbody>\r\n");
      out.write("\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t<div class=\"paging_area\"  id=\"pagination\"> </div>\r\n");
      out.write("\t\t\t\t\t<h3 class=\"hidden\">풋터 영역</h3>\r\n");
      out.write("\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"mat_de\" class=\"layerPop layerType2\" style=\"width: 600px;\">\r\n");
      out.write("         <dl>\r\n");
      out.write("            <dt>\r\n");
      out.write("               <strong>학습자료</strong>\r\n");
      out.write("              <input type=\"text\" id=\"tutorId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" hidden>\r\n");
      out.write("              \r\n");
      out.write("            </dt>\r\n");
      out.write("            <dd class=\"content\" >\r\n");
      out.write("                  <table class=\"row\">\r\n");
      out.write("              <caption>caption</caption>\r\n");
      out.write("            <tbody>\r\n");
      out.write("            <form id=uploadfrom enctype=\"multipart/form-data\" >\r\n");
      out.write("            <tr id=\"lectureList\">\r\n");
      out.write("            \t<th>강의목록<span class=\"font_red\">*</span></th>\r\n");
      out.write("            \t<td>\r\n");
      out.write("            \t\t<select id=\"lecture_value\">\r\n");
      out.write("\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            \t\t</select>\r\n");
      out.write("            \t</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("             <tr>\r\n");
      out.write("                <th scope=\"row\">제목<span class=\"font_red\">*</span> </th>\r\n");
      out.write("               <td id=\"title\" colspan=\"3\" >\r\n");
      out.write("\t               <input type =\"hidden\"  id=\"learn_data_id\"   name =\"learn_data_id\" >\r\n");
      out.write("\t               <input type =\"hidden\"  id=\"lec_id \" name =\"lec_id \" value= \"lec_id\" >\r\n");
      out.write("\t               <input type =\"text\"  id=\"learn_tit\"    name =\"learn_tit\"  class=\"inputTxt p100\">\r\n");
      out.write("               </td>\r\n");
      out.write("              \r\n");
      out.write("               <th id = \"wDate_1\"scope=\"row\">등록일자 </th>\r\n");
      out.write("               <td id = \"wDate_2\" colspan=\"3\" > <input type =\"text\"  id=\"w_date\"   name =\"w_date\" class=\"inputTxt p100\" readonly></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <th scope=\"row\">자료내용 <span class=\"font_red\">*</span></th>\r\n");
      out.write("               <td  id=\"con\" colspan=\"6\">\r\n");
      out.write("                  <textarea class=\"inputTxt p100\" id=\"learn_con\"  name =\"learn_con\" style=\"width:100%; border:0; resize:none;\"></textarea>\r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <th scope=\"row\">첨부파일<span class=\"font_red\">*</span></th>\r\n");
      out.write("               <td colspan=\"6\">\r\n");
      out.write("                    <div class=\"filebox bs3-primary\">\r\n");
      out.write("                            <input type=\"file\" id=\"bbs_files_1\"  name=\"bbs_files_1\" class=\"upload-hidden\"><br/>\r\n");
      out.write("                            \r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"margin: 5px ;\" id=\"disfilename\"  name=\"disfilename\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<a id=\"fileDownLoad\">다운로드</a>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"learnMatId\" hidden/>\r\n");
      out.write("                              <input type=\"hidden\" id=\"downloadFile\"> \r\n");
      out.write("                              <input type=\"hidden\" id=\"downloadFileName\">                                        \r\n");
      out.write("                        </div>\r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </form>\r\n");
      out.write("             </tbody> \r\n");
      out.write("          </table>\r\n");
      out.write("       \t\t\t<div class=\"btn_areaC mt30\">\r\n");
      out.write("\t\t\t\t\t<a href=\"javascript:learningMaterialsSave();\" class=\"btnType blue\" id=\"btnSave\" name=\"btn\"><span>저장</span></a> \r\n");
      out.write("\t\t\t\t\t<a href=\"javascript:learningMaterialsUpdate();\" class=\"btnType blue\" id=\"btnUpdate\" name=\"btn\"><span>수정</span></a> \r\n");
      out.write("\t\t\t\t\t<a href=\"javascript:learningMaterailsDelete();\" class=\"btnType blue\" id=\"btnDelete\" name=\"btn\"><span>삭제</span></a> \r\n");
      out.write("\t\t\t\t\t<a href=\"\"\tclass=\"btnType gray\"  id=\"btnClose\" name=\"btn\"><span>취소</span></a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("               </dd>\r\n");
      out.write("\t\t\t</dl>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t<!-- \r\n");
      out.write("\t\t<a href=\"javascript:cancleBtn();\" class=\"closePop\" id=\"btnClose\" name=\"btn\"><span class=\"hidden\">닫기</span></a>\r\n");
      out.write("\t\t -->\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/view/tut/tutorLearnMaterials.jsp(446,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/view/tut/tutorLearnMaterials.jsp(446,10) '${lectureList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${lectureList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/view/tut/tutorLearnMaterials.jsp(446,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("lecture");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lecture.lec_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lecture.lec_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/view/tut/tutorLearnMaterials.jsp(501,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/view/tut/tutorLearnMaterials.jsp(501,6) '${lectureList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${lectureList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/view/tut/tutorLearnMaterials.jsp(501,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("lecture");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lecture.lec_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lecture.lec_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
